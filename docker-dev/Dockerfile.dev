FROM node:16-alpine

# node:16-alpine is the slimest node image doesn't have some libc components checkout, https://github.com/nodejs/docker-node/tree/b4117f9333da4138b03a546ec926ef50a31506c3#nodealpine
RUN apk add --no-cache libc6-compat

# Create directory where the code will be at
RUN mkdir -p /usr/src/app

# Set the created app directory to be the working directory
WORKDIR /usr/src/app

# Copy package.json yarn.lock files over to the working directory of the image
COPY package.json yarn.lock ./

# Run the install command
RUN yarn install

# Copy files to the image
COPY . .

# expose port 3000 to the host machine
# EXPOSE 3000

# Running the app
CMD ["yarn", "dev"]

# Example of how to build
#   sudo docker build -f Dockerfile.dev -t somotracker-web .
# List all running containers
#   sudo docker container ls
# Run the projects container
#   sudo docker run -p 3000:3000 somotracker-web
# Stop the running container using container_id
#   sudo docker stop container_id
#     container_id can be found by running sudo docker container ls command a list of all running containers will show with container_id column
# List all images
#   sudo docker images
# Delete an image
#   sudo docker image rm repository_name
# List all images which have not tag or no repository name dangling
#   sudo docker images -f dangling=true
# Delete all dangling images
#   sudo docker rmi $(sudo docker images -f dangling=true -q)